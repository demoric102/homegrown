{"version":3,"sources":["/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.html","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.scss","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.ts","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.html","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.scss","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.ts","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/user.module.ts","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/user.routing.ts","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.html","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.scss","/Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.ts"],"names":[],"mappings":";;;;;AAAA,4nBAA4nB,eAAe,sqMAAsqM,mJAAmJ,YAAY,ucAAuc,gJAAgJ,WAAW,6T;;;;;;;ACAljP;AACA;;;AAGA;AACA,qDAAsD,sBAAsB,EAAE,sCAAsC,8BAA8B,EAAE;;AAEpJ;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;ACXyD;AAIP;AACT;AACO;AACE;AACI;AAStD,IAAa,eAAe;IAa1B,yBACU,MAAc,EACd,WAAwB,EACxB,UAAsB,EACtB,aAA4B,EAC5B,WAAwB;QAJxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,kBAAa,GAAb,aAAa,CAAe;QAC5B,gBAAW,GAAX,WAAW,CAAa;QAjB1B,SAAI,GAAQ,EAAE,CAAC;QAKf,oBAAe,GAAG,KAAK,CAAC;QACxB,UAAK,GAAG;YACd,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;SACZ;IAQG,CAAC;IAEL,kCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;IAC9B,CAAC;IAED,uCAAa,GAAb,UAAc,GAAG;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC;IACD,kCAAQ,GAAR;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aACrC,SAAS,CAAC,UAAC,IAAI;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,GAAG;gBACX,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,8BAA8B,CAAC;aACnD,CAAC;YACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,EAAE,UAAC,KAAwB;YAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG;oBACX,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC9D,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,KAAK,GAAG;oBACX,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC5I,CAAC;YACJ,CAAC;QACH,CAAC,EAAE;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IAEL,CAAC;IACH,sBAAC;AAAD,CAAC;AArEY,eAAe;IAL3B,+EAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,yFAAsC;QACtC,yFAAsC;KACvC,CAAC;yDAekB,+DAAM,oBAAN,+DAAM,sDACD,mEAAW,oBAAX,mEAAW,sDACZ,iEAAU,oBAAV,iEAAU,sDACP,uEAAa,oBAAb,uEAAa,sDACf,mEAAW,oBAAX,mEAAW;GAlBvB,eAAe,CAqE3B;AArE2B;;;;;;;;;ACjB5B,meAAme,4X;;;;;;;ACAne;AACA;;;AAGA;AACA,qDAAsD,sBAAsB,EAAE,sCAAsC,8BAA8B,EAAE;;AAEpJ;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACXyD;AAIP;AACT;AACO;AACf;AACgB;AAQjD,IAAa,aAAa;IAMxB,uBACU,MAAc,EACd,WAAwB,EACxB,UAAsB;QAFtB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QARxB,SAAI,GAAQ,EAAE,CAAC;QAGvB,cAAS,GAAQ,EAAE,CAAC;IAMhB,CAAC;IAEL,gCAAQ,GAAR;QAAA,iBAgFC;QA/EC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACtC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG;YACf,UAAU,EAAE,IAAI;YAChB,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,SAAS;YACd,UAAU,EAAE,QAAQ;YACpB,SAAS,EAAE,KAAK;YAChB,IAAI,EAAE,UAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;gBAC7B,KAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC;qBAC7B,SAAS,CAAC,UAAC,QAAQ;oBAClB,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBACrB,CAAC,CAAC,CAAC;YACP,CAAC;YACD,WAAW,EAAE,UAAC,GAAS,EAAE,IAA0B,EAAE,KAAa;gBAChE,IAAM,IAAI,GAAG,KAAI,CAAC;gBAClB,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBAC7B,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE;oBACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,EAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBAC9C,CAAC,CAAC,CAAC;gBACH,MAAM,CAAC,GAAG,CAAC;YACb,CAAC;YACD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG;wBAC/B,MAAM,CAAC,6FAA6F,CAAC;oBACvG,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG;wBAC/B,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;wBAC7B,MAAM,CAAC,8CAA8C,GAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAC,GAAG,GAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC,aAAa,GAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAC,UAAU,CAAC;oBACnI,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAS;wBAC1C,MAAM,CAAC,oCAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,kEAAU,CAAC,CAAC;oBACjD,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,UAAU;oBAChB,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,IAAI;oBACf,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG;wBAC/B,MAAM,CAAC,mDAAmD,GAAC,CAAC,IAAI,CAAC,GAAC,SAAS,CAAC;oBAC9E,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,KAAK;oBAChB,MAAM,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,GAAG;wBAC/B,MAAM,CAAC,cAAc,GAAC,CAAC,IAAI,CAAC,GAAC,MAAM,CAAC;oBACtC,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,KAAK;iBACjB;aACF;YACD,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;YACpB,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACxB,UAAU,EAAE,EAAE;YACd,SAAS,EAAE,KAAK;YAChB,WAAW,EAAE,IAAI;YACjB,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,IAAI;YACb,OAAO,EAAE,MAAM;SAChB,CAAC;IACJ,CAAC;IAED,gCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YACxD,iCAAiC;YACjC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzB,CAAC,EAAE,UAAC,MAAM;YACR,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IACH,oBAAC;AAAD,CAAC;AAvGY,aAAa;IALzB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,qFAAoC;QACpC,qFAAoC;KACrC,CAAC;yDAQkB,+DAAM,oBAAN,+DAAM,sDACD,mEAAW,oBAAX,mEAAW,sDACZ,iEAAU,oBAAV,iEAAU;GATrB,aAAa,CAuGzB;AAvGyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBe;AACM;AACA;AACoB;AACf;AACD;AACe;AACd;AAC+B;AACvB;AACN;AACV;AACU;AACA;AAmBtD,IAAa,UAAU;IAAvB;IAAyB,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAb,UAAU;IAjBtB,8EAAQ,CAAC;QACR,OAAO,EAAE;YACP,6DAAY;YACZ,qEAAY,CAAC,QAAQ,CAAC,kEAAU,CAAC;YACjC,2DAAW;YACX,mEAAmB;YACnB,wFAAoB;YACpB,iEAAiB;YACjB,0EAAU;YACV,kEAAc;YACd,iFAAgB;YAChB,6EAAgB;YAChB,mFAAe;SAChB;QACD,YAAY,EAAE,CAAC,iFAAe,EAAC,4EAAa,EAAE,4EAAa,CAAC;KAC7D,CAAC;GAEW,UAAU,CAAG;AAAH;;;;;;;;;;;;;AC/BqC;AACN;AACA;AAC/C,IAAM,UAAU,GAAW;IAChC;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,iFAAe;QAC1B,IAAI,EAAE;YACJ,OAAO,EAAE,aAAa;YACtB,YAAY,EAAE,IAAI;SACnB;KACF;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,2EAAa;QACxB,IAAI,EAAE;YACJ,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,IAAI;SACnB;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2EAAa;QACxB,IAAI,EAAE;YACJ,OAAO,EAAE,WAAW;YACpB,YAAY,EAAE,IAAI;SACnB;KACF;CACF,CAAC;;;;;;;;AC7BF,ozBAAozB,4BAA4B,GAAG,2BAA2B,iSAAiS,0BAA0B,0WAA0W,wBAAwB,qSAAqS,yBAAyB,6WAA6W,wBAAwB,wSAAwS,gCAAgC,iXAAiX,uBAAuB,ypBAAypB,qqBAAqqB,4BAA4B,sQAAsQ,2BAA2B,mRAAmR,wBAAwB,kRAAkR,0BAA0B,uRAAuR,wBAAwB,6QAA6Q,uBAAuB,qSAAqS,gCAAgC,wY;;;;;;;ACAxiM;AACA;;;AAGA;AACA,qDAAsD,sBAAsB,EAAE,sCAAsC,8BAA8B,EAAE;;AAEpJ;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXyD;AAEU;AAGjB;AACF;AAG2B;AAO3E,IAAa,aAAa;IAgBxB,uBACU,MAAc,EACd,KAAqB,EACrB,WAAwB,EACxB,UAAsB,EACtB,YAAsB;QAJtB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAU;QAnBhC,WAAM,GAAU,EAAE,CAAC;QACnB,QAAG,GAAG,CAAC,CAAC;QACA,aAAQ,GAAQ,EAAE,CAAC;QACnB,SAAI,GAAQ,EAAE,CAAC;QAIf,oBAAe,GAAG,KAAK,CAAC;QACxB,UAAK,GAAG;YACd,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;SACZ;IAQG,CAAC;IAEL,4BAAI,GAAJ,UAAK,OAAO;QAAZ,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAC,MAAM;YACjD,KAAI,CAAC,WAAW,GAAG,kBAAgB,MAAQ,CAAC;QAC9C,CAAC,EAAE,UAAC,MAAM;YACR,KAAI,CAAC,WAAW,GAAG,eAAa,KAAI,CAAC,gBAAgB,CAAC,MAAM,CAAG,CAAC;QAClE,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,wCAAgB,GAAxB,UAAyB,MAAW;QAClC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,iBAAiB,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,uFAAmB,CAAC,cAAc,CAAC,CAAC,CAAC;YACzD,MAAM,CAAC,2BAA2B,CAAC;QACrC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAE,WAAS,MAAQ,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;QACtC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM;aAC1B,SAAS,CAAC,UAAC,IAAI,IAAK,YAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAjC,CAAiC,CAAC,CAAC;IAC7D,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,KAAK,GAAG;YACX,OAAO,EAAE,KAAK;YACd,MAAM,EAAE,IAAI;YACZ,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;aACnC,SAAS,CAAC,UAAC,IAAI;YACd,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,KAAK,GAAG;gBACX,OAAO,EAAE,IAAI;gBACb,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,mCAAmC,CAAC;aACxD,CAAC;YACF,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC,EAAE,UAAC,KAAwB;YAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,YAAY,KAAK,CAAC,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG;oBACX,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;iBAC9D,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,KAAK,GAAG;oBACX,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,KAAK,CAAC,MAAM;oBACpB,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,oBAAoB,EAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;iBAC5I,CAAC;YACJ,CAAC;QACH,CAAC,EAAE;YACD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,oBAAC;AAAD,CAAC;AAvFY,aAAa;IALzB,+EAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,qFAAoC;QACpC,qFAAoC;KACrC,CAAC;yDAkBkB,+DAAM,oBAAN,+DAAM,sDACP,uEAAc,oBAAd,uEAAc,sDACR,mEAAW,oBAAX,mEAAW,sDACZ,iEAAU,oBAAV,iEAAU,sDACR,4EAAQ,oBAAR,4EAAQ;GArBrB,aAAa,CAuFzB;AAvFyB","file":"13.chunk.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        Create User\\n      </div>\\n      <div class=\\\"card-block\\\">\\n        <ng-container *ngIf=\\\"progressLoading\\\">\\n          <div class=\\\"loader02\\\"></div>\\n        </ng-container>\\n        <form #createUser=\\\"ngForm\\\" [style.opacity]=\\\"progressLoading == true? 0.4 : 1\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n          <div class=\\\"alert\\\" [class.alert-success]=\\\"alert.status == 200\\\" [class.alert-danger]=\\\"alert.status == 400\\\" role=\\\"alert\\\" *ngIf=\\\"alert.visible\\\">\\n            <strong>Oh snap!</strong> {{alert.message}}.\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"firstname.errors && firstname.touched\\\">\\n                <label for=\\\"firstname\\\">\\n                      First Name\\n                    </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" name=\\\"firstname\\\" #firstname=\\\"ngModel\\\" [(ngModel)]=\\\"user.firstname\\\"\\n                  minlength=\\\"2\\\" required/>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"firstname.errors && firstname.touched\\\">\\n                  <small [hidden]=\\\"!firstname.errors.required\\\">\\n                    First name is required.\\n                  </small>\\n                  <small [hidden]=\\\"!firstname.errors.minlength\\\">\\n                    Min characters is 2\\n                  </small>\\n                </div>\\n              </fieldset>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"lastname.errors && lastname.touched\\\">\\n                <label for=\\\"lastname\\\">\\n                  Last Name\\n                </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" name=\\\"lastname\\\" #lastname=\\\"ngModel\\\" [(ngModel)]=\\\"user.lastname\\\"\\n                  minlength=\\\"2\\\" required/>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"lastname.errors && lastname.touched\\\">\\n                  <small [hidden]=\\\"!lastname.errors.required\\\">\\n                    Last name is required.\\n                  </small>\\n                  <small [hidden]=\\\"!lastname.errors.minlength\\\">\\n                    Min characters is 2\\n                  </small>\\n                </div>\\n              </fieldset>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"phone.errors && phone.touched\\\">\\n                <label for=\\\"phone\\\">\\n                  Phone Number\\n                </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Phone\\\" name=\\\"Phone\\\" #phone=\\\"ngModel\\\" [(ngModel)]=\\\"user.phone\\\" minlength=\\\"11\\\"\\n                  maxlength=\\\"15\\\" required/>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"phone.errors && phone.touched\\\">\\n                  <small [hidden]=\\\"!phone.errors.required\\\">\\n                    Your Phone Number is required.\\n                  </small>\\n                  <small [hidden]=\\\"!phone.errors.minlength\\\">\\n                    Min characters is 11\\n                  </small>\\n                </div>\\n              </fieldset>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"email.errors && email.touched\\\">\\n                <label for=\\\"email\\\">\\n                  Email\\n                </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" name=\\\"email\\\" #email=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\" minlength=\\\"5\\\"\\n                  required/>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"email.errors && email.touched\\\">\\n                  <small [hidden]=\\\"!email.errors.required\\\">\\n                    Your Email is required.\\n                  </small>\\n                  <small [hidden]=\\\"!email.errors.minlength\\\">\\n                    Min characters is 5\\n                  </small>\\n                </div>\\n              </fieldset>\\n            </div>\\n          </div>\\n          <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"address.errors && address.touched\\\">\\n            <label for=\\\"address\\\">\\n                  Address\\n                </label>\\n            <textarea class=\\\"form-control\\\" placeholder=\\\"Address\\\" name=\\\"address\\\" #address=\\\"ngModel\\\" [(ngModel)]=\\\"user.address\\\" minlength=\\\"20\\\"\\n              required>\\n                </textarea>\\n            <div class=\\\"form-control-feedback\\\" *ngIf=\\\"address.errors && address.touched\\\">\\n              <small [hidden]=\\\"!address.errors.required\\\">\\n                    Your Address is required.\\n                  </small>\\n              <small [hidden]=\\\"!address.errors.minlength\\\">\\n                    Min characters is 20\\n                  </small>\\n            </div>\\n          </fieldset>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"password.errors && password.touched\\\">\\n                <label for=\\\"password\\\">\\n                 Password\\n                </label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\" [(ngModel)]=\\\"user.password\\\"\\n                  minlength=\\\"8\\\" required/>\\n                <div class=\\\"form-control-feedback\\\" *ngIf=\\\"password.errors && password.touched\\\">\\n                  <small [hidden]=\\\"!password.errors.required\\\">\\n                    Password\\n                  </small>\\n                  <small [hidden]=\\\"!password.errors.minlength\\\">\\n                    Min characters is 8\\n                  </small>\\n                </div>\\n              </fieldset>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"passwordAgain.errors && passwordAgain.touched\\\">\\n                <label for=\\\"passwordAgain\\\">\\n                Password Again\\n              </label>\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password Again\\\" name=\\\"passwordAgain\\\" #passwordAgain=\\\"ngModel\\\" [(ngModel)]=\\\"user.passwordAgain\\\" minlength=\\\"5\\\"\\n              required/>\\n              </fieldset>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"role.errors && role.touched\\\">\\n                <label for=\\\"role\\\">\\n                  Role\\n                </label>\\n                <select name=\\\"role\\\" class=\\\"form-control\\\" #role=\\\"ngModel\\\" [(ngModel)]=\\\"user.role\\\" (change)=\\\"selectSchools(user.role);\\\">\\n                  <option disabled selected></option>\\n                  <option *ngFor=\\\"let role of (role$ | async)\\\" [value]=\\\"role.id\\\">{{role?.name}}</option>\\n                </select>\\n              </fieldset>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <fieldset class=\\\"form-group\\\" [class.has-danger]=\\\"lga.errors && lga.touched\\\">\\n                <label for=\\\"lga\\\">\\n                  Local Govt. Area\\n                </label>\\n                <select name=\\\"lga\\\" class=\\\"form-control\\\" #lga=\\\"ngModel\\\" [(ngModel)]=\\\"user.lga\\\" (change)=\\\"selectSchools(user.lga);\\\">\\n                  <option disabled selected></option>\\n                  <option *ngFor=\\\"let lga of (lga$ | async)\\\" [value]=\\\"lga.id\\\">{{lga?.name}}</option>\\n                </select>\\n              </fieldset>\\n            </div>\\n          </div>\\n          <div class=\\\"block mb-3\\\"></div>\\n          <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!createUser.valid\\\">Create</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.html\n// module id = ../../../../../src/app/user/create/create.component.html\n// module chunks = 13","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ tree-viewport {\\n  overflow: visible; }\\n  :host /deep/ tree-viewport > div {\\n    height: auto !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.scss\n// module id = ../../../../../src/app/user/create/create.component.scss\n// module chunks = 13","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from \"rxjs/Observable\";\nimport { Bank } from \"../../models/bank\";\nimport { Lga } from \"../../models/lga\";\nimport { UserService } from \"../../services/user\";\nimport { Router } from \"@angular/router\";\nimport { LgaService } from \"../../services/lga\";\nimport { BankService } from \"../../services/bank\";\nimport { SchoolService } from \"../../services/school\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { School } from \"../../models/school\";\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.scss']\n})\nexport class CreateComponent implements OnInit {\n  private user: any = {};\n  private lgas$: Observable<Array<Lga>>;\n  private banks$: Observable<Array<Bank>>;\n  private lga$: Observable<Array<Lga>>;\n  private schools$: Observable<Array<School>>;\n  private progressLoading = false;\n  private alert = {\n    visible: false,\n    status: null,\n    message: ''\n  }\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private lgaService: LgaService,\n    private schoolService: SchoolService,\n    private bankService: BankService\n  ) { }\n\n  ngOnInit() {\n    this.lgas$ = this.lgaService.getAll();\n    this.banks$ = this.bankService.getAll();\n    this.schools$ = null; \n    this.schoolService.getAll();\n  }\n  \n  selectSchools(lga){\n    this.schools$ = this.schoolService.getLga(lga);\n  }\n  onSubmit() {\n    let that = this;\n    this.progressLoading = true;\n    that.alert = {\n      visible: false,\n      status: null,\n      message: ''\n    };\n    this.userService.createUser(this.user)\n    .subscribe((data) => {\n      that.user = {};\n      that.alert = {\n        visible: true,\n        status: 200,\n        message: ''.concat('A new user has been created.')\n      };\n      that.progressLoading = false;\n      console.info(data);\n    }, (error: HttpErrorResponse) => {\n      that.progressLoading = false;\n      if (error.error instanceof Error) {\n        that.alert = {\n          visible: true,\n          status: error.status,\n          message: ''.concat('An error occurred:', error.error.message)\n        };\n      } else {\n        that.alert = {\n          visible: true,\n          status: error.status,\n          message: ''.concat('An error occurred:', error.error.data.invalidAttributes[Object.keys(error.error.data.invalidAttributes)[0]][0].message)\n        };\n      }\n    }, () => {\n      that.progressLoading = false;\n    });\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/create/create.component.ts","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-header\\\">Users list</div>\\n          <div class=\\\"card-block\\\">\\n              <p>Showing all Users</p>\\n          </div>\\n      \\n          <div class=\\\"table-responsive\\\">\\n              <table datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"table align-middle mb-0\\\">\\n                  <thead>\\n                      <tr>\\n                          <th>&nbsp;</th>\\n                          <th>User</th>\\n                          <th>Registered</th>\\n                          <th>Location</th>\\n                          <th>Email</th>\\n                          <th>Phone</th>\\n                      </tr>\\n                  </thead>\\n                  \\n              </table>\\n          </div>\\n      </div>\\n    \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.html\n// module id = ../../../../../src/app/user/list/list.component.html\n// module chunks = 13","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ tree-viewport {\\n  overflow: visible; }\\n  :host /deep/ tree-viewport > div {\\n    height: auto !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.scss\n// module id = ../../../../../src/app/user/list/list.component.scss\n// module chunks = 13","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from \"rxjs/Observable\";\nimport { Bank } from \"../../models/bank\";\nimport { Lga } from \"../../models/lga\";\nimport { UserService } from \"../../services/user\";\nimport { Router } from \"@angular/router\";\nimport { LgaService } from \"../../services/lga\";\nimport * as Moment from 'moment';\nimport { DATEFORMAT } from \"../../shared/format\";\n\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  private user: any = {};\n  private lgas$: Observable<Array<Lga>>;\n  private banks$: Observable<Array<Bank>>;\n  dtOptions: any = {};\n\n  constructor(\n    private router: Router,\n    private userService: UserService,\n    private lgaService: LgaService\n  ) { }\n\n  ngOnInit() {\n    this.lgas$ = this.lgaService.getAll();\n    const that = this;\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      dom: '<f<t>p>',\n      pagingType: 'simple',\n      orderable: false,\n      ajax: (data, callback, settings) => {\n        this.userService.datatable(data)\n          .subscribe((response) => {\n            callback(response);\n          });\n      },\n      rowCallback: (row: Node, data: any[] | Object | any, index: number) => {\n        const self = this;\n        $('td', row).unbind('click');\n        $('td', row).bind('click', () => {\n          self.router.navigate(['/user/view',data.id])\n        });\n        return row;\n      }, \n      columns: [\n        {\n          data: 'firstname',\n          width: '10%',\n          orderable: true,\n          render: function (data, type, row){\n            return '<img src=\"https://randomuser.me/api/portraits/men/62.jpg\" class=\"avatar-md rounded\" alt=\"\">';\n          }\n        },\n        {\n          data: 'firstname',\n          width: '20%',\n          orderable: true,\n          render: function (data, type, row){\n            console.log(data, type, row);\n            return '<a href=\"#\" class=\"d-block text-capitalize\">'+(row.firstname)+' '+(row.lastname)+'</a><small>'+(row.lastname)+'</small>';\n          }\n        },\n        {\n          data: 'createdAt',\n          width: '20%',\n          orderable: true,\n          render: function (data, type, row, meta: any) {\n            return Moment(data).calendar(null, DATEFORMAT);\n          }\n        },\n        {\n          data: 'lastname',\n          width: '20%',\n          orderable: true,\n          render: function (data, type, row){\n            return '<span class=\"badge badge-default text-uppercase\">'+(data)+'</span>';\n          }\n        },\n        {\n          data: 'email',\n          width: '20%',\n          orderable: false,\n          render: function (data, type, row){\n            return '<a href=\"#\">'+(data)+'</a>';\n          }\n        },\n        {\n          data: 'phone',\n          width: '20%',\n          orderable: false,\n        }\n      ],\n      order: [[3, 'desc']],\n      lengthMenu: [20, 30, 50],\n      pageLength: 20,\n      autoWidth: false,\n      deferRender: true,\n      stateSave: true,\n      scrollX: true,\n      scrollY: 'auto'\n    };\n  }\n  \n  onSubmit() {\n    console.log(this.user);\n    this.userService.createUser(this.user).subscribe((response) => {\n      // this.router.navigate( ['/'] );\n      console.info(response);\n    }, (reason) => {\n      console.warn(reason);\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/list/list.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { TreeModule } from 'angular-tree-component';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { NgbProgressbarModule, NgbTabsetModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CreateComponent } from \"./create/create.component\";\nimport { ListComponent } from \"./list/list.component\";\nimport { UserRoutes } from \"./user.routing\";\nimport { ViewComponent } from \"./view/view.component\";\nimport { DataTablesModule } from 'angular-datatables';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(UserRoutes),\n    FormsModule,\n    ReactiveFormsModule,\n    NgbProgressbarModule,\n    CustomFormsModule,\n    TreeModule,\n    TextMaskModule,\n    FileUploadModule,\n    DataTablesModule,\n    NgbTabsetModule\n  ],\n  declarations: [CreateComponent,ListComponent, ViewComponent]\n})\n\nexport class UserModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/user.module.ts","import { Routes } from '@angular/router';\nimport { CreateComponent } from \"./create/create.component\";\nimport { ListComponent } from \"./list/list.component\";\nimport { ViewComponent } from \"./view/view.component\";\nexport const UserRoutes: Routes = [\n  {\n    path: 'create',\n    component: CreateComponent,\n    data: {\n      heading: 'Create User',\n      removeFooter: true\n    }\n  },\n  {\n    path: 'list',\n    component: ListComponent,\n    data: {\n      heading: 'List User',\n      removeFooter: true\n    }\n  },\n  {\n    path: 'view/:id',\n    component: ViewComponent,\n    data: {\n      heading: 'View User',\n      removeFooter: true\n    }\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/user.routing.ts","module.exports = \"<div class=\\\"wrapper\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n        <div class=\\\"card\\\">\\n          <ng-container *ngIf=\\\"user$\\\">\\n                <div class=\\\"card\\\">\\n                    <div class=\\\"card-header\\\" >\\n                        Basic Information\\n                        \\n                    </div>\\n                  <div class=\\\"card-block\\\">\\n                      <ng-container *ngIf=\\\"progressLoading\\\">\\n                          <div class=\\\"loader02\\\"></div>\\n                        </ng-container>\\n                    <div class=\\\"row mb-2\\\">\\n                      <div class=\\\"col\\\">\\n                        <div class=\\\"justify-content-start\\\">   \\n                          <div class=\\\"mr-auto\\\">Names</div>\\n                          <strong>{{(user$ | async)?.firstname}} {{(user$ | async)?.lastname}}</strong>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col\\\">          \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">Address</div>\\n                          <strong>{{(user$ | async)?.address}}</strong>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"row mb-2\\\">\\n                      <div class=\\\"col\\\">       \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">Phone</div>\\n                          <strong>{{(user$ | async)?.phone}}</strong>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col\\\">          \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">School Name</div>\\n                          <strong>{{(user$ | async)?.school}}</strong>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"row mb-2\\\">\\n                      <div class=\\\"col\\\">          \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">Email</div>\\n                          <strong>{{(user$ | async)?.email}}</strong>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"col\\\">          \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">Account Number</div>\\n                          <strong>{{(user$ | async)?.accountNumber}}</strong>\\n                        </div>\\n                      </div>\\n                    </div>\\n  \\n                    <div class=\\\"row mb-2\\\">\\n                      <div class=\\\"col\\\">          \\n                        <div class=\\\"justify-content-start\\\">\\n                          <div class=\\\"mr-auto\\\">Bank Name</div>\\n                          <strong>{{(user$ | async)?.bank}}</strong>\\n                        </div>\\n                      </div>\\n                    </div>\\n                    <button class=\\\"btn btn-info\\\" (click)=\\\"open(editUser)\\\">Edit User</button>\\n                  </div>\\n                </div>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n<ng-template ngbModalContainer></ng-template>\\n<ng-template #editUser let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h6 class=\\\"modal-title text-uppercase\\\">Edit user</h6>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <form #edituser=\\\"ngForm\\\" [style.opacity]=\\\"progressLoading == true? 0.4 : 1\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"modal-body\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-12\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-block\\\">\\n              <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table mb-0\\\">\\n                  <ng-container *ngIf=\\\"user$\\\">\\n                  <tbody>\\n                    <tr>\\n                      <td>\\n                        First Name\\n                      </td>\\n                      <td>\\n                        <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.firstname}}\\\">\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                      <td>\\n                        Last name\\n                      </td>\\n                      <td>\\n                        <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.lastname}}\\\">\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                        <td>\\n                          Phone Number\\n                        </td>\\n                        <td>\\n                          <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.phone}}\\\">\\n                        </td>\\n                      </tr>\\n                    <tr>\\n                      <td>\\n                        Address\\n                      </td>\\n                      <td>\\n                        <textarea name=\\\"\\\" rows=\\\"4\\\" value=\\\"{{(user$ | async)?.address}}\\\"></textarea>\\n                      </td>\\n                    </tr>\\n                    <tr>\\n                        <td>\\n                          Email\\n                        </td>\\n                        <td>\\n                          <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.email}}\\\">\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td>\\n                          Bank\\n                        </td>\\n                        <td>\\n                          <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.bank}}\\\">\\n                        </td>\\n                      </tr>\\n                      <tr>\\n                          <td>\\n                            Account Number\\n                          </td>\\n                          <td>\\n                            <input type=\\\"text\\\" value=\\\"{{(user$ | async)?.accountNumber}}\\\">\\n                          </td>\\n                        </tr>\\n                  </tbody>\\n                  </ng-container>\\n                </table>\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n  </div>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-info\\\">Save Changes</button>\\n  </div>\\n</form>\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.html\n// module id = ../../../../../src/app/user/view/view.component.html\n// module chunks = 13","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host /deep/ tree-viewport {\\n  overflow: visible; }\\n  :host /deep/ tree-viewport > div {\\n    height: auto !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.scss\n// module id = ../../../../../src/app/user/view/view.component.scss\n// module chunks = 13","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from \"rxjs/Observable\";\nimport { Router, ActivatedRoute, ParamMap } from \"@angular/router\";\nimport { Bank } from \"../../models/bank\";\nimport { Lga } from \"../../models/lga\";\nimport { UserService } from \"../../services/user\";\nimport { LgaService } from \"../../services/lga\";\nimport { User } from \"../../models/user\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n  closeResult: string;\n  images: any[] = [];\n  num = 1;\n  private supplier: any = {};\n  private user: any = {};\n  private lgas$: Observable<Array<Lga>>;\n  private banks$: Observable<Array<Bank>>;\n  private user$: Observable<User>;\n  private progressLoading = false;\n  private alert = {\n    visible: false,\n    status: null,\n    message: ''\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private lgaService: LgaService,\n    private modalService: NgbModal\n  ) { }\n\n  open(content) {\n    this.modalService.open(content).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return  `with: ${reason}`;\n    }\n  }\n\n  ngOnInit() {\n    this.lgas$ = this.lgaService.getAll();\n    const that = this;\n    that.user$ = this.route.params\n       .switchMap((data) => this.userService.getUser(data.id));\n  }\n  \n  onSubmit() {\n    let that = this;\n    this.progressLoading = true;\n    that.alert = {\n      visible: false,\n      status: null,\n      message: ''\n    };\n    this.userService.editUser(this.user)\n    .subscribe((data) => {\n      that.user = {};\n      that.alert = {\n        visible: true,\n        status: 200,\n        message: ''.concat('The modifications have been made.')\n      };\n      that.progressLoading = false;\n      console.info(data);\n    }, (error: HttpErrorResponse) => {\n      that.progressLoading = false;\n      if (error.error instanceof Error) {\n        that.alert = {\n          visible: true,\n          status: error.status,\n          message: ''.concat('An error occurred:', error.error.message)\n        };\n      } else {\n        that.alert = {\n          visible: true,\n          status: error.status,\n          message: ''.concat('An error occurred:', error.error.data.invalidAttributes[Object.keys(error.error.data.invalidAttributes)[0]][0].message)\n        };\n      }\n    }, () => {\n      that.progressLoading = false;\n    });\n  }\n    \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/Toni/Documents/nodejs/SchoolFeed/src/app/user/view/view.component.ts"],"sourceRoot":"webpack:///"}