webpackJsonp([3],{"49mF":function(e,n){e.exports='<div class="d-flex align-items-center justify-content-md-center min-height-100 text-center bg-indigo-A700 h-100">\n  <div class="col col-lg-10 p-5">\n    <img src="assets/images/avatar.jpg" class="avatar-md rounded-circle" alt="user" title="user"/>\n    <div class="mb-3 mt-3">\n      <p class="ff-headers text-uppercase mb-0">Betty Simmons</p>\n      <small>Please enter your lock code</small>\n    </div>\n    <div class="center-block lockcode mt-1">\n      <form role="form" (ngSubmit)="onSubmit()">\n        <input type="text" class="form-control" placeholder="Enter passcode and press enter">\n      </form>\n    </div>\n  </div>\n</div>\n'},"4Rf3":function(e,n){e.exports='<div class="d-flex align-items-stretch min-height-100 h-100">\n  <div class="bg-cover bg-3 hidden-sm-down col-md-6 col-lg-8"></div>\n  <div class="card card-block mb-0 rounded-0 p-5 col-sm-12 col-md-6 col-lg-4">\n    <form [formGroup]="form" (ngSubmit)="onSubmit()">\n      <div class="mb-3">\n        <img src="assets/images/logo.png" class="avatar-xs mb-1" alt="">\n        <p class="ff-headers text-uppercase">Recover your password</p>\n      </div>\n      <fieldset class="form-group" [ngClass]="{\'has-danger\': form.controls[\'uname\'].hasError(\'required\') && form.controls[\'uname\'].touched}">\n        <label for="username" class="form-control-label">\n          Enter your username\n        </label>\n        <input type="text" class="form-control" placeholder="Username" [formControl]="form.controls[\'uname\']" [ngClass]="{\'form-control-danger\': form.controls[\'uname\'].hasError(\'required\') && form.controls[\'uname\'].touched}"/>\n        <div class="form-control-feedback" *ngIf="form.controls[\'uname\'].hasError(\'required\') && form.controls[\'uname\'].touched">Username is required.</div>\n      </fieldset>\n      <button class="btn btn-primary" type="submit" [disabled]="!form.valid">Reset password</button>\n    </form>\n  </div>\n</div>'},"59J+":function(e,n){e.exports='<ng-template ngbModalContainer></ng-template>\n<ng-template #content let-c="close" let-d="dismiss">\n    <div class="modal-header">\n        <h6 class="modal-title text-uppercase">BVN Verification</h6>\n        <button type="button" class="close" aria-label="Close" (click)="d(\'Cross click\')">\n      <span aria-hidden="true">&times;</span>\n    </button>\n    </div>\n    <div class="modal-body">\n        <form #bvnVerificationForm="ngForm" (ngSubmit)="alert()">\n            <div class="row">\n                <div class="col-md-6">\n                    <fieldset class="form-group" [class.has-danger]="bvn.errors && bvn.touched">\n                        <label for="bvn">\n                            BVN\n                          </label>\n                        <input type="text" class="form-control" placeholder="Enter BVN" name="bvn" #bvn="ngModel" [(ngModel)]="verify.bvn" minlength="2"\n                            required/>\n                        <div class="form-control-feedback" *ngIf="bvn.errors && bvn.touched">\n                            <small [hidden]="!bvn.errors.required">\n                          BVN is required.\n                        </small>\n                            <small [hidden]="!bvn.errors.minlength">\n                          Min characters is 2\n                        </small>\n                        </div>\n                    </fieldset>\n                </div>\n                <div class="col-md-6">\n                    <fieldset class="form-group" [class.has-danger]="method.errors && method.touched">\n                        <label for="method">\n                          Verification Method\n                        </label>\n                        <select name="method" class="form-control" #method="ngModel" [(ngModel)]="verify.otpoption" required>\n                                    <option></option>\n                                    <option value="SMS">SMS</option>\n                            <option value="VOICE">Voice Call</option>\n                        </select>\n                        <div class="form-control-feedback" *ngIf="method.errors && method.touched">\n                            <small [hidden]="!method.errors.required">\n                          Verification method is required.\n                        </small>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n            <a href="#" class="pull-right">Resend OTP</a>\n        </form>\n    </div>\n    <div class="modal-footer">\n        <button type="button" class="btn btn-secondary" (click)="verifyOtp()">Verify BVN</button>\n    </div>\n</ng-template>'},"6W3N":function(e,n,t){"use strict";var o=t("/oeL"),r=t("0WLp"),s=t("QSvv"),a=t("OTWJ");t.d(n,"a",function(){return c});var l=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},i=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},c=function(){function e(e,n){this.modalService=e,this.bvnService=n,this.verify=new s.a}return e.prototype.alert=function(){var e=this;this.modalService.open(this.content).result.then(function(n){e.closeResult="Closed with: "+n},function(e){})},e.prototype.open=function(){var e=this;this.modalService.open(this.content).result.then(function(n){e.closeResult="Closed with: "+n},function(e){})},e.prototype.verifyOtp=function(){this.bvnService.verify(this.verify).subscribe(function(e){console.log(e)})},e}();l([t.i(o.ViewChild)("content"),i("design:type",Object)],c.prototype,"content",void 0),c=l([t.i(o.Component)({selector:"bvn-modal",template:t("59J+"),encapsulation:o.ViewEncapsulation.None}),i("design:paramtypes",["function"==typeof(d=void 0!==r.b&&r.b)&&d||Object,"function"==typeof(m=void 0!==a.a&&a.a)&&m||Object])],c);var d,m},"7fVs":function(e,n){e.exports='<div class="d-flex align-items-stretch min-height-100 h-100">\n  <div class="bg-cover bg-1 hidden-sm-down col-md-6 col-lg-8"></div>\n  <div class="card card-block mb-0 rounded-0 p-5 col-sm-12 col-md-6 col-lg-4">\n    <form  #signinForm="ngForm" (ngSubmit)="onSubmit()">\n      <div class="mb-3">\n        <img src="assets/images/logo.png" class="avatar-xs mb-1" alt="">\n        <p class="ff-headers text-uppercase">Admin Login</p>\n      </div>\n      <fieldset class="form-group" [class.has-danger]="email.errors && email.touched">\n        <label for="email" class="form-control-label">\n          Enter your Email\n        </label>\n        <input type="text" class="form-control" placeholder="Email" name="email" #email="ngModel" [(ngModel)]="signin.email" minlength="5"\n        pattern="^(([^<>()[\\]\\\\.,;:\\s@\\\']+(\\.[^<>()[\\]\\\\.,;:\\s@\\\']+)*)|(\\\'.+\\\'))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$" required/>\n        <div class="form-control-feedback" *ngIf="email.errors && email.touched">\n          <small [hidden]="!email.errors.required">\n            Your Email is required.\n          </small>\n          <small [hidden]="!email.errors.minlength">\n            Min characters is 5\n          </small>\n        </div>\n      </fieldset>\n      <fieldset class="form-group" [class.has-danger]="password.errors && password.touched">\n        <label for="password" class="form-control-label">\n          Enter your password\n        </label>\n        <input type="password" class="form-control" placeholder="********" name="password" #password="ngModel" [(ngModel)]="signin.password" required/>\n        <div class="form-control-feedback" *ngIf="password.errors && password.touched">\n          <small [hidden]="!password.errors.required">\n            Password is required.\n          </small>\n        </div>\n        <a [routerLink]="[\'/authentication/forgot\']" class="form-text"><small>Recover password</small></a>\n      </fieldset>\n      <label class="custom-control custom-checkbox mb-3">\n        <input type="checkbox" class="custom-control-input">\n        <span class="custom-control-indicator"></span>\n        <span class="custom-control-description">Stay logged in</span>\n      </label>\n      <div class="block"></div>\n      <button class="btn btn-primary" type="submit" [disabled]="!signinForm.valid">Login</button>\n    </form>\n  </div>\n</div>'},"8z8h":function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var o=t("/oeL"),r=t("BkNc"),s=t("qbdv"),a=t("bm2B"),l=t("PKY+"),i=t("YMnC"),c=t("TXC9"),d=t("YT2B"),m=t("kY5v"),u=t("0WLp"),f=t("6W3N");t.d(n,"AuthenticationModule",function(){return h});var p=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},h=function(){function e(){}return e}();h=p([t.i(o.NgModule)({imports:[s.CommonModule,r.a.forChild(l.a),a.FormsModule,a.ReactiveFormsModule,u.a],declarations:[i.a,c.a,d.a,m.a,f.a]})],h)},F3L8:function(e,n,t){n=e.exports=t("rP7Y")(!1),n.push([e.i,"",""]),e.exports=e.exports.toString()},"PKY+":function(e,n,t){"use strict";var o=t("YMnC"),r=t("TXC9"),s=t("YT2B"),a=t("kY5v");t.d(n,"a",function(){return l});var l=[{path:"",children:[{path:"signin",component:o.a},{path:"signup",component:r.a},{path:"forgot",component:s.a},{path:"lockscreen",component:a.a}]}]},"QOG/":function(e,n,t){n=e.exports=t("rP7Y")(!1),n.push([e.i,"",""]),e.exports=e.exports.toString()},TXC9:function(e,n,t){"use strict";var o=t("/oeL"),r=t("BkNc"),s=t("AsoV"),a=t("cTsi");t.d(n,"a",function(){return c});var l=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},i=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},c=function(){function e(e,n,t){this.router=e,this.catererService=n,this.lgaService=t,this.signup={}}return e.prototype.ngOnInit=function(){this.lgas$=this.lgaService.getAll()},e.prototype.onSubmit=function(){console.log(this.signup),this.catererService.createCaterer(this.signup).subscribe(function(e){console.info(e)},function(e){console.warn(e)})},e}();c=l([t.i(o.Component)({selector:"app-signup",template:t("swlU"),styles:[t("F3L8")]}),i("design:paramtypes",["function"==typeof(d=void 0!==r.b&&r.b)&&d||Object,"function"==typeof(m=void 0!==s.a&&s.a)&&m||Object,"function"==typeof(u=void 0!==a.a&&a.a)&&u||Object])],c);var d,m,u},YMnC:function(e,n,t){"use strict";var o=t("/oeL"),r=t("BkNc"),s=t("ihS1"),a=t("cpxJ"),l=t("vHLT");t.d(n,"a",function(){return d});var i=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},c=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},d=function(){function e(e,n,t){this.router=e,this.userService=n,this.localStorage=t,this.signin=new a.a}return e.prototype.ngOnInit=function(){},e.prototype.onSubmit=function(){var e=this;this.userService.loginUser(this.signin).subscribe(function(n){localStorage.setItem("token",n.token),localStorage.setItem("uid",n.uid);var t=e.userService.getRedirectUrl();e.router.navigate([t])},function(e){console.warn(e)})},e}();d=i([t.i(o.Component)({selector:"app-signin",template:t("7fVs"),styles:[t("QOG/")]}),c("design:paramtypes",["function"==typeof(m=void 0!==r.b&&r.b)&&m||Object,"function"==typeof(u=void 0!==s.a&&s.a)&&u||Object,"function"==typeof(f=void 0!==l.b&&l.b)&&f||Object])],d);var m,u,f},YT2B:function(e,n,t){"use strict";var o=t("/oeL"),r=t("BkNc"),s=t("bm2B");t.d(n,"a",function(){return i});var a=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},l=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},i=function(){function e(e,n){this.fb=e,this.router=n}return e.prototype.ngOnInit=function(){this.form=this.fb.group({uname:[null,s.Validators.compose([s.Validators.required])]})},e.prototype.onSubmit=function(){this.router.navigate(["/"])},e}();i=a([t.i(o.Component)({selector:"app-forgot",template:t("4Rf3"),styles:[t("dH7L")]}),l("design:paramtypes",["function"==typeof(c=void 0!==s.FormBuilder&&s.FormBuilder)&&c||Object,"function"==typeof(d=void 0!==r.b&&r.b)&&d||Object])],i);var c,d},cpxJ:function(e,n,t){"use strict";t.d(n,"a",function(){return o});var o=function(){function e(){}return e}()},dH7L:function(e,n,t){n=e.exports=t("rP7Y")(!1),n.push([e.i,"",""]),e.exports=e.exports.toString()},kY5v:function(e,n,t){"use strict";var o=t("/oeL"),r=t("BkNc");t.d(n,"a",function(){return l});var s=this&&this.__decorate||function(e,n,t,o){var r,s=arguments.length,a=s<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,n,t,o);else for(var l=e.length-1;l>=0;l--)(r=e[l])&&(a=(s<3?r(a):s>3?r(n,t,a):r(n,t))||a);return s>3&&a&&Object.defineProperty(n,t,a),a},a=this&&this.__metadata||function(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)},l=function(){function e(e){this.router=e}return e.prototype.onSubmit=function(){this.router.navigate(["/"])},e}();l=s([t.i(o.Component)({selector:"app-lockscreen",template:t("49mF"),styles:[t("wJHk")]}),a("design:paramtypes",["function"==typeof(i=void 0!==r.b&&r.b)&&i||Object])],l);var i},swlU:function(e,n){e.exports='<div class="d-flex align-items-stretch flex-nowrap min-height-100 h-100">\n  <div class="bg-cover bg-2 hidden-sm-down col-md-6 col-lg-6"></div>\n  <div class="card card-block mb-0 rounded-0 p-5 col-sm-12 col-md-6 col-lg-6">\n      \x3c!-- <form #signUpForm="ngForm" (ngSubmit)="onSubmit()"> --\x3e\n          <form #signUpForm="ngForm" (ngSubmit)="bvnModal.open()">\n      <div class="mb-3 text-center">\n        <img src="assets/images/logo.png" class="avatar-md mb-1" alt="">\n        <p class="ff-headers text-uppercase">Home Grown School Feeding Programme</p>\n      </div>\n      <div class="row">\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="firstname.errors && firstname.touched">\n            <label for="firstname">\n              First Name\n            </label>\n            <input type="text" class="form-control" placeholder="First Name" name="firstname" #firstname="ngModel" [(ngModel)]="signup.firstname"\n              minlength="2" required/>\n            <div class="form-control-feedback" *ngIf="firstname.errors && firstname.touched">\n              <small [hidden]="!firstname.errors.required">\n            First name is required.\n          </small>\n              <small [hidden]="!firstname.errors.minlength">\n            Min characters is 2\n          </small>\n            </div>\n          </fieldset>\n        </div>\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="lastname.errors && lastname.touched">\n            <label for="lastname">\n          Last Name\n        </label>\n            <input type="text" class="form-control" placeholder="Last Name" name="lastname" #lastname="ngModel" [(ngModel)]="signup.lastname"\n              minlength="2" required/>\n            <div class="form-control-feedback" *ngIf="lastname.errors && lastname.touched">\n              <small [hidden]="!lastname.errors.required">\n            Last name is required.\n          </small>\n              <small [hidden]="!lastname.errors.minlength">\n            Min characters is 2\n          </small>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="phone.errors && phone.touched">\n            <label for="phone">\n          Phone Number\n        </label>\n            <input type="text" class="form-control" placeholder="Phone" name="Phone" #phone="ngModel" [(ngModel)]="signup.address" minlength="11"\n              maxlength="15" required/>\n            <div class="form-control-feedback" *ngIf="phone.errors && phone.touched">\n              <small [hidden]="!phone.errors.required">\n            Your Phone Number is required.\n          </small>\n              <small [hidden]="!phone.errors.minlength">\n            Min characters is 11\n          </small>\n            </div>\n          </fieldset>\n        </div>\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="email.errors && email.touched">\n            <label for="email">\n          Email\n        </label>\n            <input type="text" class="form-control" placeholder="Email" name="email" #email="ngModel" [(ngModel)]="signup.email" minlength="5"\n              required/>\n            <div class="form-control-feedback" *ngIf="email.errors && email.touched">\n              <small [hidden]="!email.errors.required">\n            Your Email is required.\n          </small>\n              <small [hidden]="!email.errors.minlength">\n            Min characters is 5\n          </small>\n            </div>\n          </fieldset>\n        </div>\n      </div>\n      <fieldset class="form-group" [class.has-danger]="address.errors && address.touched">\n        <label for="address">\n          Address\n        </label>\n        <textarea class="form-control" placeholder="Address" name="address" #address="ngModel" [(ngModel)]="signup.address" minlength="20"\n          required>\n        </textarea>\n        <div class="form-control-feedback" *ngIf="address.errors && address.touched">\n          <small [hidden]="!address.errors.required">\n            Your Address is required.\n          </small>\n          <small [hidden]="!address.errors.minlength">\n            Min characters is 20\n          </small>\n        </div>\n      </fieldset>\n      <div class="row">\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="accountNumber.errors && accountNumber.touched">\n            <label for="accountNumber">\n          Account Number\n        </label>\n            <input type="text" class="form-control" placeholder="Account Number" name="accountNumber" #accountNumber="ngModel" [(ngModel)]="signup.accountNumber"\n              minlength="10" required/>\n            <div class="form-control-feedback" *ngIf="accountNumber.errors && accountNumber.touched">\n              <small [hidden]="!accountNumber.errors.required">\n            Account Number is required.\n          </small>\n              <small [hidden]="!accountNumber.errors.minlength">\n            Min characters is 10\n          </small>\n            </div>\n          </fieldset>\n        </div>\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="bank.errors && bank.touched">\n            <label for="bank">\n        Bank\n      </label>\n            <select name="bank" class="form-control" #bank="ngModel" [(ngModel)]="signup.bank">\n        <option *ngFor="let bank of (banks$ | async)" [value]="bank.id">{{bank?.name}}</option>\n    </select>\n          </fieldset>\n        </div>\n      </div>\n      <div class="row">\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="role.errors && role.touched">\n            <label for="role">\n      Role\n    </label>\n            <select name="role" class="form-control" #role="ngModel" [(ngModel)]="signup.role">\n              <option></option>\n        <option value="caterer">Caterer</option>\n        <option value="supplier">Supplier</option>\n    </select>\n          </fieldset>\n        </div>\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="lga.errors && lga.touched">\n            <label for="lga">\n        LGA\n      </label>\n            <select name="lga" class="form-control" #lga="ngModel" [(ngModel)]="signup.lga">\n        <option *ngFor="let lga of (lgas$ | async)">{{lga?.name}}</option>\n    </select>\n          </fieldset>\n        </div>\n      </div>\n      <div class="row">\n        <ng-container *ngIf="signup.role === \'caterer\'">\n        <div class="col-md-6">\n          <fieldset class="form-group" [class.has-danger]="school.errors && school.touched">\n            <label for="school">\n        School\n      </label>\n            <select name="school" class="form-control" #school="ngModel" [(ngModel)]="signup.school">\n        <optgroup label="Swedish Cars">\n          <option value="volvo">Volvo</option>\n          <option value="saab">Saab</option>\n        </optgroup>\n        <optgroup label="German Cars">\n          <option value="mercedes">Mercedes</option>\n          <option value="audi">Audi</option>\n        </optgroup>\n      </select>\n          </fieldset>\n        </div>\n        </ng-container>\n      </div>\n\n      <label class="custom-control custom-checkbox mb-1">\n        <input type="checkbox" class="custom-control-input">\n        <span class="custom-control-indicator"></span>\n        <span class="custom-control-description">I have read and agree to the terms of service.</span>\n      </label>\n      <div class="block mb-3"></div>\n      \x3c!-- <button class="btn btn-primary" type="submit" [disabled]="!form.valid">Create</button> --\x3e\n      <button class="btn btn-primary" type="submit">Create</button>\n      <a class="btn btn-outline-primary btn-link" [routerLink]="[\'/authentication/signin\']">Login!</a>\n    </form>\n  </div>\n</div>\n<bvn-modal #bvnModal></bvn-modal>'},wJHk:function(e,n,t){n=e.exports=t("rP7Y")(!1),n.push([e.i,"",""]),e.exports=e.exports.toString()}});